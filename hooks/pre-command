#!/bin/bash

if ! vault -v >/dev/null 2>&1; then
  echo "Could not find a vault cli to retrieve docker login secrets"
  exit 1
fi

if [[ "$BUILDKITE_PLUGIN_VAULT_DOCKER_LOGIN_SECRET_PATH" == kv* ]]; then
  VAULT_METHOD="kv get"
else
  VAULT_METHOD="read"
fi

# shellcheck disable=SC2086
REGISTRY_USERNAME=$(vault $VAULT_METHOD -field=username "$BUILDKITE_PLUGIN_VAULT_DOCKER_LOGIN_SECRET_PATH")
# shellcheck disable=SC2086
REGISTRY_PASSWORD=$(vault $VAULT_METHOD -field=password "$BUILDKITE_PLUGIN_VAULT_DOCKER_LOGIN_SECRET_PATH")
# shellcheck disable=SC2086
REGISTRY_HOSTNAME=$(vault $VAULT_METHOD -field=hostname "$BUILDKITE_PLUGIN_VAULT_DOCKER_LOGIN_SECRET_PATH")

echo "~~~ Log in to $REGISTRY_HOSTNAME container registry"

if docker --version >/dev/null 2>&1; then
  echo "Logging in to $REGISTRY_HOSTNAME as $REGISTRY_USERNAME with docker cli"
  # For dockerhub we must unset the hostname argument during login
  # for credentials to be stored correctly in .docker/config.json
  # See: https://elasticco.atlassian.net/browse/REL-1195
  if [ "$REGISTRY_HOSTNAME" == "index.docker.io" ]; then
    REGISTRY_HOSTNAME=""
  fi
  docker login \
    --username "$REGISTRY_USERNAME" \
    --password "$REGISTRY_PASSWORD" \
    "$REGISTRY_HOSTNAME"

elif buildah --version >/dev/null 2>&1; then
  echo "Logging in to $REGISTRY_HOSTNAME as $REGISTRY_USERNAME with buildah cli"
  buildah login \
    --username "$REGISTRY_USERNAME" \
    --password "$REGISTRY_PASSWORD" \
    "$REGISTRY_HOSTNAME"

elif crane version >/dev/null 2>&1; then
  echo "Logging in to $REGISTRY_HOSTNAME as $REGISTRY_USERNAME with crane cli"
  crane auth login \
    --username "$REGISTRY_USERNAME" \
    --password "$REGISTRY_PASSWORD" \
    "$REGISTRY_HOSTNAME"

elif cosign version >/dev/null 2>&1; then
  echo "Logging in to $REGISTRY_HOSTNAME as $REGISTRY_USERNAME with cosign cli"
  cosign login \
    --username "$REGISTRY_USERNAME" \
    --password "$REGISTRY_PASSWORD" \
    "$REGISTRY_HOSTNAME"

elif podman version >/dev/null 2>&1; then
  echo "Logging in to $REGISTRY_HOSTNAME as $REGISTRY_USERNAME with podman cli"
  podman login \
    --username "$REGISTRY_USERNAME" \
    --password "$REGISTRY_PASSWORD" \
    "$REGISTRY_HOSTNAME"

elif skopeo version >/dev/null 2>&1; then
  echo "Logging in to $REGISTRY_HOSTNAME as $REGISTRY_USERNAME with skopeo cli"
  skopeo login \
    --username "$REGISTRY_USERNAME" \
    --password "$REGISTRY_PASSWORD" \
    "$REGISTRY_HOSTNAME"

else
  echo "No cli is available to auth. Save creds to $HOME/.docker/config.json"
  mkdir -p "$HOME/.docker" && touch "$HOME/.docker/config.json"
  echo '{"auths": {"'"$REGISTRY_HOSTNAME"'": {"auth": "'"$(echo -n "$REGISTRY_USERNAME":"$REGISTRY_PASSWORD" | base64 --wrap=0)"'"}}}' >"$HOME/.docker/config.json"
fi

#Â export to help with the logout
export REGISTRY_HOSTNAME
