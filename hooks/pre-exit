#!/usr/bin/env bash

DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"

# shellcheck source=lib/shared.bash
. "$DIR/../lib/shared.bash"

echo "~~~ Log out to $REGISTRY_HOSTNAME container registry"

if [[ "${BUILDKITE_PLUGIN_VAULT_DOCKER_LOGIN_DISABLE_LOGOUT:-false}" = "true" ]]; then
  echo 'WARNING: not logging out'
  exit 0
fi

if is_tool_available "docker" "docker --version"; then
  echo "Logging out to $REGISTRY_HOSTNAME with docker cli"
  docker logout "$REGISTRY_HOSTNAME"

elif is_tool_available "buildah" "buildah --version"; then
  echo "Logging out to $REGISTRY_HOSTNAME with buildah cli"
  buildah logout "$REGISTRY_HOSTNAME"

elif is_tool_available "crane" "crane version"; then
  echo "Logging out to $REGISTRY_HOSTNAME with crane cli"
  crane auth logout "$REGISTRY_HOSTNAME"

elif is_tool_available "cosign" "cosign version"; then
  echo 'WARNING: logging out not supported for cosign cli'

elif is_tool_available "podman" "podman version"; then
  echo "Logging out to $REGISTRY_HOSTNAME with podman cli"
  podman logout "$REGISTRY_HOSTNAME"

elif is_tool_available "skopeo" "skopeo version"; then
  echo "Logging out to $REGISTRY_HOSTNAME with skopeo cli"
  skopeo logout "$REGISTRY_HOSTNAME"

elif [[ -n "$BUILDKITE_PLUGIN_VAULT_DOCKER_LOGIN_TOOL" ]]; then
  echo "No cli tool called $BUILDKITE_PLUGIN_VAULT_DOCKER_LOGIN_TOOL is available to logout."
  exit 1

else
  echo "No cli is available to auth. Delete creds from $HOME/.docker/config.json"
  rm "$HOME/.docker/config.json"
fi
